<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.techwells.teammission.dao.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.techwells.teammission.domain.Comment" >
    <id column="comment_id" property="commentId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="row_id" property="rowId" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="to_user_id" property="toUserId" jdbcType="INTEGER" />
    <result column="weekly_id" property="weeklyId" jdbcType="INTEGER" />
    <result column="dislike_count" property="dislikeCount" jdbcType="INTEGER" />
    <result column="like_count" property="likeCount" jdbcType="INTEGER" />
    <result column="created_date" property="createdDate" jdbcType="TIMESTAMP" />
    <result column="activated" property="activated" jdbcType="INTEGER" />
    <result column="deleted" property="deleted" jdbcType="INTEGER" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.techwells.teammission.domain.Comment" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    comment_id, user_id, row_id, parent_id, to_user_id, weekly_id, dislike_count, like_count, 
    created_date, activated, deleted, update_date
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.techwells.teammission.domain.Comment" >
    <selectKey resultType="java.lang.Integer" keyProperty="commentId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_comment (user_id, row_id, parent_id, 
      to_user_id, weekly_id, dislike_count, 
      like_count, created_date, activated, 
      deleted, update_date, content
      )
    values (#{userId,jdbcType=INTEGER}, #{rowId,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, 
      #{toUserId,jdbcType=INTEGER}, #{weeklyId,jdbcType=INTEGER}, #{dislikeCount,jdbcType=INTEGER}, 
      #{likeCount,jdbcType=INTEGER}, #{createdDate,jdbcType=TIMESTAMP}, #{activated,jdbcType=INTEGER}, 
      #{deleted,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.techwells.teammission.domain.Comment" >
    <selectKey resultType="java.lang.Integer" keyProperty="commentId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="rowId != null" >
        row_id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="toUserId != null" >
        to_user_id,
      </if>
      <if test="weeklyId != null" >
        weekly_id,
      </if>
      <if test="dislikeCount != null" >
        dislike_count,
      </if>
      <if test="likeCount != null" >
        like_count,
      </if>
      <if test="createdDate != null" >
        created_date,
      </if>
      <if test="activated != null" >
        activated,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="rowId != null" >
        #{rowId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="toUserId != null" >
        #{toUserId,jdbcType=INTEGER},
      </if>
      <if test="weeklyId != null" >
        #{weeklyId,jdbcType=INTEGER},
      </if>
      <if test="dislikeCount != null" >
        #{dislikeCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null" >
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="createdDate != null" >
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="activated != null" >
        #{activated,jdbcType=INTEGER},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.techwells.teammission.domain.Comment" >
    update t_comment
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="rowId != null" >
        row_id = #{rowId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="toUserId != null" >
        to_user_id = #{toUserId,jdbcType=INTEGER},
      </if>
      <if test="weeklyId != null" >
        weekly_id = #{weeklyId,jdbcType=INTEGER},
      </if>
      <if test="dislikeCount != null" >
        dislike_count = #{dislikeCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null" >
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="createdDate != null" >
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="activated != null" >
        activated = #{activated,jdbcType=INTEGER},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.techwells.teammission.domain.Comment" >
    update t_comment
    set user_id = #{userId,jdbcType=INTEGER},
      row_id = #{rowId,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      to_user_id = #{toUserId,jdbcType=INTEGER},
      weekly_id = #{weeklyId,jdbcType=INTEGER},
      dislike_count = #{dislikeCount,jdbcType=INTEGER},
      like_count = #{likeCount,jdbcType=INTEGER},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      activated = #{activated,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.techwells.teammission.domain.Comment" >
    update t_comment
    set user_id = #{userId,jdbcType=INTEGER},
      row_id = #{rowId,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      to_user_id = #{toUserId,jdbcType=INTEGER},
      weekly_id = #{weeklyId,jdbcType=INTEGER},
      dislike_count = #{dislikeCount,jdbcType=INTEGER},
      like_count = #{likeCount,jdbcType=INTEGER},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      activated = #{activated,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  
 <!-- 
 	List<CommentUserVos> selectComentByWeekId(Integer weekId);
  -->
<select id="selectComentByWeekId" resultType="com.techwells.teammission.domain.rs.CommentUserVos">
	select new.*,t_user.real_name as toRealName from (select
	c.comment_id as commentId,
	c.parent_id as parentId,
	c.user_id as userId,
	u.user_icon as userIcon,
	u.real_name as realName,
	c.created_date as replayTime,
	c.content as content,
	c.to_user_id as toUserId,
	c.like_count as likeCount,
	c.dislike_count as disLikeCount
FROM
	t_comment c
inner join t_user u on u.user_id = c.user_id
WHERE
	c.weekly_id = #{weekId} order by c.created_date) new left join t_user on new.toUserId=t_user.user_id 
</select>


<!-- 
	List<CommentUserVos> selectCommentUserVosByUserIdAndParentId(@Param("userId")Integer userId,@Param("toUserId")Integer toUserId,@Param("commentId")Integer commentId);
 -->
<select id="selectCommentUserVosByUserIdAndParentId" resultType="com.techwells.teammission.domain.rs.CommentUserVos">
	SELECT
	new.*, t_user.real_name AS toRealName
FROM
	(
		SELECT
			c.comment_id AS commentId,
			c.parent_id AS parentId,
			c.user_id AS userId,
			u.user_icon AS userIcon,
			u.real_name AS realName,
			c.created_date AS replayTime,
			c.content AS content,
			c.to_user_id AS toUserId,
			c.like_count AS likeCount,
			c.dislike_count AS disLikeCount
		FROM
			t_comment c
		INNER JOIN t_user u ON u.user_id = c.user_id
		<where>
			<if test="userId!=null">
				and c.user_id=#{userId}
			</if>
			
			<if test="commentId!=null">
				and comment_id=#{commentId}
			</if>
			
			<if test="toUserId">
				and c.to_user_id in (#{toUserId},0)
			</if>
		</where>
			  
	) new
LEFT JOIN t_user ON new.toUserId = t_user.user_id
</select>


<!-- 
	    List<Comment> selectCommentByParentId(@Param("parentId")Integer parentId,@Param("userId")Integer userId,@Param("toUserId")Integer toUserId);
 -->
<select id="selectCommentByParentId" resultMap="ResultMapWithBLOBs">
	select comment_id,user_id,to_user_id from t_comment
		<where>
			<if test="userId!=null">
				and user_id=#{userId}
			</if>
			
			<if test="toUserId!=null">
				and to_user_id=#{toUserId} 
			</if>
			and parent_id=#{parentId}
		</where>
</select>


























</mapper>